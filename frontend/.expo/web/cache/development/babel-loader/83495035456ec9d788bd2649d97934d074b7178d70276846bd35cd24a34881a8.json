{"ast":null,"code":"import React from 'react';\nimport { Snackbar } from 'react-native-paper';\nimport { colors } from \"../styles/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var CustomSnackbar = function CustomSnackbar(_ref) {\n  var visible = _ref.visible,\n    message = _ref.message,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    onDismiss = _ref.onDismiss,\n    duration = _ref.duration;\n  var getBackgroundColor = function getBackgroundColor() {\n    switch (type) {\n      case 'error':\n        return colors.error;\n      case 'success':\n        return colors.success;\n      case 'warning':\n        return colors.warning;\n      case 'info':\n      default:\n        return colors.primary;\n    }\n  };\n  var getTextColor = function getTextColor() {\n    switch (type) {\n      case 'error':\n        return colors.onError;\n      case 'success':\n        return colors.onSuccess;\n      case 'warning':\n        return colors.onWarning;\n      case 'info':\n      default:\n        return colors.onPrimary;\n    }\n  };\n  var getDuration = function getDuration() {\n    if (duration !== undefined) return duration;\n    switch (type) {\n      case 'success':\n        return 2000;\n      case 'error':\n        return 4000;\n      default:\n        return 3000;\n    }\n  };\n  return _jsx(Snackbar, {\n    visible: visible,\n    onDismiss: onDismiss,\n    duration: getDuration(),\n    style: {\n      backgroundColor: getBackgroundColor()\n    },\n    theme: {\n      colors: {\n        onSurface: getTextColor()\n      }\n    },\n    children: message\n  });\n};\nexport default CustomSnackbar;","map":{"version":3,"names":["React","Snackbar","colors","jsx","_jsx","CustomSnackbar","_ref","visible","message","_ref$type","type","onDismiss","duration","getBackgroundColor","error","success","warning","primary","getTextColor","onError","onSuccess","onWarning","onPrimary","getDuration","undefined","style","backgroundColor","theme","onSurface","children"],"sources":["/Users/ziyuanhe/code/booonus-aug/frontend/src/components/CustomSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { Snackbar } from 'react-native-paper';\nimport { colors } from '../styles/theme';\n\n/**\n * 自定义 Snackbar 组件\n * 支持不同类型的消息显示\n */\nexport const CustomSnackbar = ({ \n  visible, \n  message, \n  type = 'info', \n  onDismiss,\n  duration \n}) => {\n  const getBackgroundColor = () => {\n    switch (type) {\n      case 'error':\n        return colors.error;\n      case 'success':\n        return colors.success;\n      case 'warning':\n        return colors.warning;\n      case 'info':\n      default:\n        return colors.primary;\n    }\n  };\n\n  const getTextColor = () => {\n    switch (type) {\n      case 'error':\n        return colors.onError;\n      case 'success':\n        return colors.onSuccess;\n      case 'warning':\n        return colors.onWarning;\n      case 'info':\n      default:\n        return colors.onPrimary;\n    }\n  };\n\n  const getDuration = () => {\n    if (duration !== undefined) return duration;\n    \n    switch (type) {\n      case 'success':\n        return 2000; // 成功消息显示时间短一些\n      case 'error':\n        return 4000; // 错误消息显示时间长一些\n      default:\n        return 3000;\n    }\n  };\n\n  return (\n    <Snackbar\n      visible={visible}\n      onDismiss={onDismiss}\n      duration={getDuration()}\n      style={{ \n        backgroundColor: getBackgroundColor(),\n      }}\n      theme={{\n        colors: {\n          onSurface: getTextColor(),\n        }\n      }}\n    >\n      {message}\n    </Snackbar>\n  );\n};\n\nexport default CustomSnackbar;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAMzC,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAMrB;EAAA,IALJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,SAAA,GAAAH,IAAA,CACPI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,MAAM,GAAAA,SAAA;IACbE,SAAS,GAAAL,IAAA,CAATK,SAAS;IACTC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;EAER,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/B,QAAQH,IAAI;MACV,KAAK,OAAO;QACV,OAAOR,MAAM,CAACY,KAAK;MACrB,KAAK,SAAS;QACZ,OAAOZ,MAAM,CAACa,OAAO;MACvB,KAAK,SAAS;QACZ,OAAOb,MAAM,CAACc,OAAO;MACvB,KAAK,MAAM;MACX;QACE,OAAOd,MAAM,CAACe,OAAO;IACzB;EACF,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,QAAQR,IAAI;MACV,KAAK,OAAO;QACV,OAAOR,MAAM,CAACiB,OAAO;MACvB,KAAK,SAAS;QACZ,OAAOjB,MAAM,CAACkB,SAAS;MACzB,KAAK,SAAS;QACZ,OAAOlB,MAAM,CAACmB,SAAS;MACzB,KAAK,MAAM;MACX;QACE,OAAOnB,MAAM,CAACoB,SAAS;IAC3B;EACF,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIX,QAAQ,KAAKY,SAAS,EAAE,OAAOZ,QAAQ;IAE3C,QAAQF,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,IAAI;MACb,KAAK,OAAO;QACV,OAAO,IAAI;MACb;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,OACEN,IAAA,CAACH,QAAQ;IACPM,OAAO,EAAEA,OAAQ;IACjBI,SAAS,EAAEA,SAAU;IACrBC,QAAQ,EAAEW,WAAW,CAAC,CAAE;IACxBE,KAAK,EAAE;MACLC,eAAe,EAAEb,kBAAkB,CAAC;IACtC,CAAE;IACFc,KAAK,EAAE;MACLzB,MAAM,EAAE;QACN0B,SAAS,EAAEV,YAAY,CAAC;MAC1B;IACF,CAAE;IAAAW,QAAA,EAEDrB;EAAO,CACA,CAAC;AAEf,CAAC;AAED,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}