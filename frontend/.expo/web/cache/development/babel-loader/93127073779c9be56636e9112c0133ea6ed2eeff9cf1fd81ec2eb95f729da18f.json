{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, TextInput, Button, Card, ActivityIndicator, Snackbar } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authAPI } from \"../services/api\";\nimport { colors, commonStyles } from \"../styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    snackbarVisible = _useState0[0],\n    setSnackbarVisible = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    snackbarMessage = _useState10[0],\n    setSnackbarMessage = _useState10[1];\n  var _useState11 = useState('error'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    snackbarType = _useState12[0],\n    setSnackbarType = _useState12[1];\n  var showMessage = function showMessage(title, message) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'error';\n    var onConfirm = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    console.log(`${type}: ${title} - ${message}`);\n    setSnackbarMessage(message);\n    setSnackbarType(type);\n    setSnackbarVisible(true);\n    if (Platform.OS !== 'web') {\n      if (onConfirm) {\n        Alert.alert(title, message, [{\n          text: '确定',\n          onPress: onConfirm\n        }]);\n      } else {\n        Alert.alert(title, message);\n      }\n    } else {\n      if (onConfirm) {\n        setTimeout(onConfirm, 2000);\n      }\n    }\n  };\n  var showError = function showError(message) {\n    showMessage('错误', message, 'error');\n  };\n  var showSuccess = function showSuccess(message) {\n    var onConfirm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    showMessage('成功', message, 'success', onConfirm);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!username.trim() || !password.trim()) {\n        showError('请输入用户名和密码');\n        return;\n      }\n      setLoading(true);\n      try {\n        var response = yield authAPI.login(username.trim(), password);\n        yield AsyncStorage.setItem('userToken', response.token);\n        yield AsyncStorage.setItem('userInfo', JSON.stringify(response.user));\n        Alert.alert('成功', '登录成功！', [{\n          text: '确定',\n          onPress: function onPress() {\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'MainTabs'\n              }]\n            });\n          }\n        }]);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('登录失败:', error);\n        var errorMessage = ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.error) || '登录失败，请检查网络连接';\n        Alert.alert('登录失败', errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var goToRegister = function goToRegister() {\n    navigation.navigate('Register');\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: commonStyles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.logoContainer,\n          children: [_jsx(Ionicons, {\n            name: \"heart\",\n            size: 80,\n            color: colors.heart\n          }), _jsx(Text, {\n            style: styles.appTitle,\n            children: \"Booonus\"\n          }), _jsx(Text, {\n            style: styles.appSubtitle,\n            children: \"\\u60C5\\u4FA3\\u79EF\\u5206\\u7BA1\\u7406\"\n          })]\n        }), _jsx(Card, {\n          style: styles.loginCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Text, {\n              style: styles.loginTitle,\n              children: \"\\u6B22\\u8FCE\\u56DE\\u6765\"\n            }), _jsx(TextInput, {\n              label: \"\\u7528\\u6237\\u540D\",\n              value: username,\n              onChangeText: setUsername,\n              mode: \"outlined\",\n              style: commonStyles.input,\n              left: _jsx(TextInput.Icon, {\n                icon: \"account\"\n              }),\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            }), _jsx(TextInput, {\n              label: \"\\u5BC6\\u7801\",\n              value: password,\n              onChangeText: setPassword,\n              mode: \"outlined\",\n              style: commonStyles.input,\n              secureTextEntry: !showPassword,\n              left: _jsx(TextInput.Icon, {\n                icon: \"lock\"\n              }),\n              right: _jsx(TextInput.Icon, {\n                icon: showPassword ? 'eye-off' : 'eye',\n                onPress: function onPress() {\n                  return setShowPassword(!showPassword);\n                }\n              })\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: handleLogin,\n              loading: loading,\n              disabled: loading,\n              style: [commonStyles.button, styles.loginButton],\n              contentStyle: styles.buttonContent,\n              children: loading ? '登录中...' : '登录'\n            }), _jsx(Button, {\n              mode: \"text\",\n              onPress: goToRegister,\n              style: styles.registerButton,\n              textColor: colors.primary,\n              children: \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u53F7\\uFF1F\\u7ACB\\u5373\\u6CE8\\u518C\"\n            })]\n          })\n        }), _jsxs(View, {\n          style: styles.decorationContainer,\n          children: [_jsx(Ionicons, {\n            name: \"star\",\n            size: 20,\n            color: colors.star,\n            style: styles.star1\n          }), _jsx(Ionicons, {\n            name: \"star\",\n            size: 16,\n            color: colors.star,\n            style: styles.star2\n          }), _jsx(Ionicons, {\n            name: \"star\",\n            size: 12,\n            color: colors.star,\n            style: styles.star3\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: colors.background\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  appTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.primary,\n    marginTop: 16\n  },\n  appSubtitle: {\n    fontSize: 16,\n    color: colors.onSurfaceVariant,\n    marginTop: 8\n  },\n  loginCard: {\n    backgroundColor: colors.surface,\n    borderRadius: 20,\n    elevation: 4,\n    shadowColor: colors.outline,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 8\n  },\n  loginTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.onSurface,\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  loginButton: {\n    marginTop: 16,\n    backgroundColor: colors.primary\n  },\n  buttonContent: {\n    paddingVertical: 8\n  },\n  registerButton: {\n    marginTop: 16\n  },\n  decorationContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    pointerEvents: 'none'\n  },\n  star1: {\n    position: 'absolute',\n    top: 100,\n    right: 50\n  },\n  star2: {\n    position: 'absolute',\n    top: 200,\n    left: 30\n  },\n  star3: {\n    position: 'absolute',\n    bottom: 150,\n    right: 80\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","Alert","KeyboardAvoidingView","Platform","ScrollView","Text","TextInput","Button","Card","ActivityIndicator","Snackbar","Ionicons","AsyncStorage","authAPI","colors","commonStyles","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState0","snackbarVisible","setSnackbarVisible","_useState1","_useState10","snackbarMessage","setSnackbarMessage","_useState11","_useState12","snackbarType","setSnackbarType","showMessage","title","message","type","arguments","length","undefined","onConfirm","console","log","OS","alert","text","onPress","setTimeout","showError","showSuccess","handleLogin","_ref2","_asyncToGenerator","trim","response","login","setItem","token","JSON","stringify","user","reset","index","routes","name","error","_error$response","_error$response$data","errorMessage","data","apply","goToRegister","navigate","style","container","behavior","children","contentContainerStyle","styles","scrollContainer","logoContainer","size","color","heart","appTitle","appSubtitle","loginCard","Content","loginTitle","label","value","onChangeText","mode","input","left","Icon","icon","autoCapitalize","autoCorrect","secureTextEntry","right","disabled","button","loginButton","contentStyle","buttonContent","registerButton","textColor","primary","decorationContainer","star","star1","star2","star3","create","flexGrow","flex","justifyContent","padding","backgroundColor","background","alignItems","marginBottom","fontSize","fontWeight","marginTop","onSurfaceVariant","surface","borderRadius","elevation","shadowColor","outline","shadowOffset","width","height","shadowOpacity","shadowRadius","onSurface","textAlign","paddingVertical","position","top","bottom","pointerEvents"],"sources":["/Users/ziyuanhe/code/booonus-aug/frontend/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Alert,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n} from 'react-native';\nimport {\n  Text,\n  TextInput,\n  Button,\n  Card,\n  ActivityIndicator,\n  Snackbar,\n} from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { authAPI } from '../services/api';\nimport { colors, commonStyles } from '../styles/theme';\n\nexport default function LoginScreen({ navigation }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState('error');\n\n  // 跨平台提示函数\n  const showMessage = (title, message, type = 'error', onConfirm = null) => {\n    console.log(`${type}: ${title} - ${message}`);\n\n    setSnackbarMessage(message);\n    setSnackbarType(type);\n    setSnackbarVisible(true);\n\n    if (Platform.OS !== 'web') {\n      if (onConfirm) {\n        Alert.alert(title, message, [{ text: '确定', onPress: onConfirm }]);\n      } else {\n        Alert.alert(title, message);\n      }\n    } else {\n      if (onConfirm) {\n        setTimeout(onConfirm, 2000);\n      }\n    }\n  };\n\n  const showError = (message) => {\n    showMessage('错误', message, 'error');\n  };\n\n  const showSuccess = (message, onConfirm = null) => {\n    showMessage('成功', message, 'success', onConfirm);\n  };\n\n  const handleLogin = async () => {\n    if (!username.trim() || !password.trim()) {\n      showError('请输入用户名和密码');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await authAPI.login(username.trim(), password);\n      \n      // 保存token和用户信息\n      await AsyncStorage.setItem('userToken', response.token);\n      await AsyncStorage.setItem('userInfo', JSON.stringify(response.user));\n      \n      Alert.alert('成功', '登录成功！', [\n        {\n          text: '确定',\n          onPress: () => {\n            // 重新加载App以更新登录状态\n            navigation.reset({\n              index: 0,\n              routes: [{ name: 'MainTabs' }],\n            });\n          },\n        },\n      ]);\n    } catch (error) {\n      console.error('登录失败:', error);\n      const errorMessage = error.response?.data?.error || '登录失败，请检查网络连接';\n      Alert.alert('登录失败', errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const goToRegister = () => {\n    navigation.navigate('Register');\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={commonStyles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.container}>\n          {/* Logo区域 */}\n          <View style={styles.logoContainer}>\n            <Ionicons name=\"heart\" size={80} color={colors.heart} />\n            <Text style={styles.appTitle}>Booonus</Text>\n            <Text style={styles.appSubtitle}>情侣积分管理</Text>\n          </View>\n\n          {/* 登录表单 */}\n          <Card style={styles.loginCard}>\n            <Card.Content>\n              <Text style={styles.loginTitle}>欢迎回来</Text>\n              \n              <TextInput\n                label=\"用户名\"\n                value={username}\n                onChangeText={setUsername}\n                mode=\"outlined\"\n                style={commonStyles.input}\n                left={<TextInput.Icon icon=\"account\" />}\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n              />\n\n              <TextInput\n                label=\"密码\"\n                value={password}\n                onChangeText={setPassword}\n                mode=\"outlined\"\n                style={commonStyles.input}\n                secureTextEntry={!showPassword}\n                left={<TextInput.Icon icon=\"lock\" />}\n                right={\n                  <TextInput.Icon\n                    icon={showPassword ? 'eye-off' : 'eye'}\n                    onPress={() => setShowPassword(!showPassword)}\n                  />\n                }\n              />\n\n              <Button\n                mode=\"contained\"\n                onPress={handleLogin}\n                loading={loading}\n                disabled={loading}\n                style={[commonStyles.button, styles.loginButton]}\n                contentStyle={styles.buttonContent}\n              >\n                {loading ? '登录中...' : '登录'}\n              </Button>\n\n              <Button\n                mode=\"text\"\n                onPress={goToRegister}\n                style={styles.registerButton}\n                textColor={colors.primary}\n              >\n                还没有账号？立即注册\n              </Button>\n            </Card.Content>\n          </Card>\n\n          {/* 装饰元素 */}\n          <View style={styles.decorationContainer}>\n            <Ionicons name=\"star\" size={20} color={colors.star} style={styles.star1} />\n            <Ionicons name=\"star\" size={16} color={colors.star} style={styles.star2} />\n            <Ionicons name=\"star\" size={12} color={colors.star} style={styles.star3} />\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: colors.background,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  appTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.primary,\n    marginTop: 16,\n  },\n  appSubtitle: {\n    fontSize: 16,\n    color: colors.onSurfaceVariant,\n    marginTop: 8,\n  },\n  loginCard: {\n    backgroundColor: colors.surface,\n    borderRadius: 20,\n    elevation: 4,\n    shadowColor: colors.outline,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  loginTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.onSurface,\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  loginButton: {\n    marginTop: 16,\n    backgroundColor: colors.primary,\n  },\n  buttonContent: {\n    paddingVertical: 8,\n  },\n  registerButton: {\n    marginTop: 16,\n  },\n  decorationContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    pointerEvents: 'none',\n  },\n  star1: {\n    position: 'absolute',\n    top: 100,\n    right: 50,\n  },\n  star2: {\n    position: 'absolute',\n    top: 200,\n    left: 30,\n  },\n  star3: {\n    position: 'absolute',\n    bottom: 150,\n    right: 80,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}