{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport ShopScreen from \"./src/screens/ShopScreen\";\nimport RulesScreen from \"./src/screens/RulesScreen\";\nimport EventsScreen from \"./src/screens/EventsScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport TestScreen from \"./src/screens/TestScreen\";\nimport { theme } from \"./src/styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Shop') {\n            iconName = focused ? 'storefront' : 'storefront-outline';\n          } else if (route.name === 'Rules') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Events') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.onSurfaceVariant,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopColor: theme.colors.outline\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.primary\n        },\n        headerTintColor: theme.colors.onPrimary,\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: '首页'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Shop\",\n      component: ShopScreen,\n      options: {\n        title: '小卖部'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Rules\",\n      component: RulesScreen,\n      options: {\n        title: '规则'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Events\",\n      component: EventsScreen,\n      options: {\n        title: '事件'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: '我的'\n      }\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    checkLoginStatus();\n  }, []);\n  var checkLoginStatus = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('userToken');\n        setIsLoggedIn(!!token);\n      } catch (error) {\n        console.error('检查登录状态失败:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function checkLoginStatus() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (isLoading) {\n    return null;\n  }\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: isLoggedIn ? _jsx(Stack.Screen, {\n          name: \"MainTabs\",\n          component: MainTabs\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Register\",\n            component: RegisterScreen\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","Provider","PaperProvider","Ionicons","AsyncStorage","LoginScreen","RegisterScreen","HomeScreen","ShopScreen","RulesScreen","EventsScreen","ProfileScreen","TestScreen","theme","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","onSurfaceVariant","tabBarStyle","backgroundColor","surface","borderTopColor","outline","headerStyle","headerTintColor","onPrimary","headerTitleStyle","fontWeight","children","Screen","component","options","title","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","checkLoginStatus","_ref3","_asyncToGenerator","token","getItem","error","console","apply","arguments","headerShown"],"sources":["/Users/ziyuanhe/code/booonus-aug/frontend/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// 导入屏幕组件\nimport LoginScreen from './src/screens/LoginScreen';\nimport RegisterScreen from './src/screens/RegisterScreen';\nimport HomeScreen from './src/screens/HomeScreen';\nimport ShopScreen from './src/screens/ShopScreen';\nimport RulesScreen from './src/screens/RulesScreen';\nimport EventsScreen from './src/screens/EventsScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\nimport TestScreen from './src/screens/TestScreen';\n\n// 导入主题\nimport { theme } from './src/styles/theme';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// 主标签导航\nfunction MainTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Shop') {\n            iconName = focused ? 'storefront' : 'storefront-outline';\n          } else if (route.name === 'Rules') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Events') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.onSurfaceVariant,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopColor: theme.colors.outline,\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.primary,\n        },\n        headerTintColor: theme.colors.onPrimary,\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={{ title: '首页' }}\n      />\n      <Tab.Screen \n        name=\"Shop\" \n        component={ShopScreen} \n        options={{ title: '小卖部' }}\n      />\n      <Tab.Screen \n        name=\"Rules\" \n        component={RulesScreen} \n        options={{ title: '规则' }}\n      />\n      <Tab.Screen \n        name=\"Events\" \n        component={EventsScreen} \n        options={{ title: '事件' }}\n      />\n      <Tab.Screen \n        name=\"Profile\" \n        component={ProfileScreen} \n        options={{ title: '我的' }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  const checkLoginStatus = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      setIsLoggedIn(!!token);\n    } catch (error) {\n      console.error('检查登录状态失败:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return null; // 或者显示加载屏幕\n  }\n\n  return (\n    <PaperProvider theme={theme}>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {isLoggedIn ? (\n            <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n          ) : (\n            <>\n              <Stack.Screen name=\"Login\" component={LoginScreen} />\n              <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}